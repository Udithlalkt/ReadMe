import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jms.core.JmsTemplate;
import com.ibm.mq.jms.MQConnectionFactory;
import javax.jms.JMSException;

@Configuration
public class NewMQConfig {

    @Bean
    public MQConnectionFactory newMQConnectionFactory() throws JMSException {
        MQConnectionFactory factory = new MQConnectionFactory();
        factory.setHostName("${newIBMMQ.host}");
        factory.setPort(Integer.parseInt("${newIBMMQ.port}"));
        factory.setChannel("${newIBMMQ.channel}");
        factory.setQueueManager("${newIBMMQ.queueManager}");
        return factory;
    }

    @Bean
    public JmsTemplate newJmsTemplate(MQConnectionFactory newMQConnectionFactory) {
        return new JmsTemplate(newMQConnectionFactory);
    }
}





import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.stereotype.Service;

@Service
public class MQPushService {

    @Autowired
    private JmsTemplate newJmsTemplate;

    public void sendMessageToNewQueue(String message) {
        newJmsTemplate.convertAndSend("${newIBMMQ.queueName}", message);
        System.out.println("Message sent to new Queue :: " + message);
    }
}



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jms.annotation.JmsListener;
import org.springframework.stereotype.Service;

@Service
public class MQListenerService {

    @Autowired
    private MQPushService mqPushService;

    @JmsListener(destination = "${IBMMQConfig.queueName}")
    public void receiveMessage(String message) {
        System.out.println("Message received from Queue :: " + message);
        
        // Push the message to the new MQ
        mqPushService.sendMessageToNewQueue(message);
    }
}



<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>springboot-ibm-mq</artifactId>
    <version>1.0.0</version>

    <!-- Java 17 Configuration -->
    <properties>
        <java.version>17</java.version>
        <spring.boot.version>3.1.0</spring.boot.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring.boot.version}</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <dependencies>

      <!-- Spring Boot JMS Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jms</artifactId>
        </dependency>

        <!-- IBM MQ All Clients Library -->
        <dependency>
            <groupId>com.ibm.mq</groupId>
            <artifactId>com.ibm.mq.allclient</artifactId>
            <version>9.3.1.0</version>
        </dependency>

        <!-- Spring Boot Web (if you're exposing APIs or running a web app) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Test (for unit testing your services) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Maven compiler plugin to use Java 17 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
