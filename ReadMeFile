import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import com.ibm.mq.jms.MQQueue; // Actual IBM MQ Queue class
import com.ibm.mq.jms.MQQueueConnectionFactory; // IBM-specific connection factory
import javax.jms.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class MQServiceTest {

    @Mock
    private MQQueueConnectionFactory factory; // Use IBM-specific factory

    @Mock
    private QueueConnection connection;

    @Mock
    private QueueSession session;

    @Mock
    private MessageProducer messageProducer;

    @Mock
    private BytesMessage bytesMessage;

    private MQService mqService; // Your service class

    @BeforeEach
    void setup() {
        MockitoAnnotations.openMocks(this);
        mqService = new MQService(factory); // Inject mocked IBM factory
    }

    @Test
    void testSendMessage() throws JMSException {
        // 1. Mock IBM's MQQueue (implements Queue and MQDestination)
        MQQueue destinationRqMock = mock(MQQueue.class);

        // 2. Stub session.createQueue() to return the IBM Queue mock
        when(session.createQueue(anyString())).thenReturn(destinationRqMock);

        // 3. Stub factory and connection to return mocked objects
        when(factory.createQueueConnection()).thenReturn(connection);
        when(connection.createQueueSession(anyBoolean(), anyInt())).thenReturn(session);
        when(session.createProducer(any(Destination.class))).thenReturn(messageProducer);
        when(session.createBytesMessage()).thenReturn(bytesMessage);

        // 4. Execute the method
        String testMessage = "test";
        String correlationId = "123";
        mqService.sendMessage(testMessage, correlationId);

        // 5. Verify JMS interactions
        verify(destinationRqMock).setBooleanProperty(eq("WMQ_MQMD_WRITE_ENABLED"), eq(true));
        verify(destinationRqMock).setIntProperty(eq("WMQ_MQMD_MESSAGE_CONTEXT"), eq(2));
        verify(destinationRqMock).setMessageBodyStyle(eq(WMQ_MESSAGE_BODY_MQ));

        // 6. Verify message properties
        verify(bytesMessage).setJMSCorrelationID(correlationId);
        verify(messageProducer).send(bytesMessage);
    }
}
